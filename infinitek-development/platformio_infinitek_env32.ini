[env:Infinitek32_base]
framework               = ${common.framework}
platform                = ${core32.platform}
platform_packages       = ${core32.platform_packages}
board_build.filesystem  = ${common.board_build.filesystem}
custom_unpack_dir       = ${common.custom_unpack_dir}
; ensure Arduino variants path is set by platform, do not override
; board_build.variants_dir = ${common.board_build.variants_dir}
board                   = esp32dev
monitor_speed           = ${common.monitor_speed}
monitor_echo            = ${common.monitor_echo}
upload_resetmethod      = ${common.upload_resetmethod}
check_skip_packages     = ${common.check_skip_packages}
extra_scripts           = ${esp32_defaults.extra_scripts}
                          ; add Arduino core before custom scripts so framework paths are ready
                          pre:pio-tools/pre_source_dir.py
                          pre:pio-tools/set_partition_table.py
                          pre:pio-tools/override_copy.py
                          pre:pio-tools/compress-html.py
                          pre:pio-tools/port-vsc.py
                          post:pio-tools/strip-flags.py
monitor_filters         = ${esp32_defaults.monitor_filters}
build_unflags           = ${core32.build_unflags}
build_flags             = ${core32.build_flags}
lib_ldf_mode            = ${common.lib_ldf_mode}
lib_compat_mode         = ${common.lib_compat_mode}
lib_extra_dirs          = ${common.lib_extra_dirs}
                          lib/libesp32
                          lib/libesp32_lvgl
lib_ignore              = ${esp32_defaults.lib_ignore}
; Add files to Filesystem for all env (global). Remove no files entry and add a line with the file to include
; Example for adding the Partition Manager
; custom_files_upload =
; Infinitek/berry/modules/Partition_Manager.tapp
custom_files_upload     = no_files

[env:Infinitek32-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32-solo1
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}
custom_sdkconfig        = '# CONFIG_SPIRAM is not set'
                          '# CONFIG_BT_ENABLED is not set'
                          CONFIG_BT_DISABLED=y
                          '# CONFIG_BT_NIMBLE_ENABLED is no set'
                          CONFIG_BT_NIMBLE_DISABLED=y
                          '# CONFIG_ULP_COPROC_ENABLED is not set'
                          CONFIG_ULP_COPROC_DISABLED=y
                          '# CONFIG_TWAI_ERRATA_FIX_BUS_OFF_REC is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_TX_INTR_LOST is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_RX_FRAME_INVALID is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_RX_FIFO_CORRUPT is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_LISTEN_ONLY_DOM is not set'

[env:Infinitek32solo1-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32-solo1
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32solo1-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}
custom_sdkconfig        = '# CONFIG_SPIRAM is not set'
                          '# CONFIG_BT_ENABLED is not set'
                          CONFIG_BT_DISABLED=y
                          '# CONFIG_BT_NIMBLE_ENABLED is no set'
                          CONFIG_BT_NIMBLE_DISABLED=y
                          '# CONFIG_ULP_COPROC_ENABLED is not set'
                          CONFIG_ULP_COPROC_DISABLED=y
                          '# CONFIG_TWAI_ERRATA_FIX_BUS_OFF_REC is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_TX_INTR_LOST is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_RX_FRAME_INVALID is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_RX_FIFO_CORRUPT is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_LISTEN_ONLY_DOM is not set'

[env:Infinitek32s2-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32s2
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32s2-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}

[env:Infinitek32s2cdc-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32s2cdc
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32s2cdc-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}

[env:Infinitek32c2-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32c2
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c2-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}

[env:Infinitek32c3-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32c3
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c3-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}

[env:Infinitek32c3ser-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32c3ser
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c3ser-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}

[env:Infinitek32s3-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32s3-qio_qspi
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                         -DFIRMWARE_SAFEBOOT
                         -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32s3-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}

[env:Infinitek32c5-safeboot]
platform                = https://github.com/Jason2866/platform-espressif32.git#Arduino/IDF55
extends                 = env:Infinitek32_base
board                   = esp32c5
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c5-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}
custom_sdkconfig        = 
                          '# CONFIG_BT_ENABLED is not set'
                          '# CONFIG_BT_NIMBLE_ENABLED is not set'
                          '# CONFIG_BT_CONTROLLER_ENABLED is not set'
                          CONFIG_BT_CONTROLLER_DISABLED=y
                          '# CONFIG_LWIP_IP_FORWARD is not set'
                          '# CONFIG_LWIP_IPV4_NAPT is not set'
                          '# CONFIG_LWIP_IPV4_NAPT_PORTMAP is not set'
                          '# CONFIG_LWIP_PPP_SUPPORT is not set'
                          '# CONFIG_ETH_ENABLED is not set'
                          '# CONFIG_ETH_USE_SPI_ETHERNET is not set'
                          '# CONFIG_ETH_TRANSMIT_MUTEX is not set'
                          '# CONFIG_ETH_SPI_ETHERNET_DM9051 is not set'
                          '# CONFIG_ETH_SPI_ETHERNET_W5500 is not set'
                          '# CONFIG_ETH_SPI_ETHERNET_KSZ8851SNL is not set'
custom_component_remove = espressif/esp_hosted
                          espressif/esp_wifi_remote
                          espressif/esp_modem

[env:Infinitek32c5ser-safeboot]
platform                = https://github.com/Jason2866/platform-espressif32.git#Arduino/IDF55
extends                 = env:Infinitek32_base
board                   = esp32c5ser
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c5ser-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}
custom_sdkconfig        = 
                          '# CONFIG_BT_ENABLED is not set'
                          '# CONFIG_BT_NIMBLE_ENABLED is not set'
                          '# CONFIG_BT_CONTROLLER_ENABLED is not set'
                          CONFIG_BT_CONTROLLER_DISABLED=y
                          '# CONFIG_LWIP_IP_FORWARD is not set'
                          '# CONFIG_LWIP_IPV4_NAPT is not set'
                          '# CONFIG_LWIP_IPV4_NAPT_PORTMAP is not set'
                          '# CONFIG_LWIP_PPP_SUPPORT is not set'
                          '# CONFIG_ETH_ENABLED is not set'
                          '# CONFIG_ETH_USE_SPI_ETHERNET is not set'
                          '# CONFIG_ETH_TRANSMIT_MUTEX is not set'
                          '# CONFIG_ETH_SPI_ETHERNET_DM9051 is not set'
                          '# CONFIG_ETH_SPI_ETHERNET_W5500 is not set'
                          '# CONFIG_ETH_SPI_ETHERNET_KSZ8851SNL is not set'
custom_component_remove = espressif/esp_hosted
                          espressif/esp_wifi_remote
                          espressif/esp_modem

[env:Infinitek32c6-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32c6
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c6-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}
custom_sdkconfig        = 
                          '# CONFIG_BT_ENABLED is not set'
                          '# CONFIG_BT_NIMBLE_ENABLED is not set'
                          '# CONFIG_BT_CONTROLLER_ENABLED is not set'
                          CONFIG_BT_CONTROLLER_DISABLED=y
                          '# CONFIG_LWIP_IP_FORWARD is not set'
                          '# CONFIG_LWIP_IPV4_NAPT is not set'
                          '# CONFIG_LWIP_IPV4_NAPT_PORTMAP is not set'
                          '# CONFIG_LWIP_PPP_SUPPORT is not set'
custom_component_remove = espressif/esp_hosted
                          espressif/esp_wifi_remote
                          espressif/esp_modem

[env:Infinitek32c6ser-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32c6ser
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c6ser-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}
custom_sdkconfig        = 
                          '# CONFIG_BT_ENABLED is not set'
                          '# CONFIG_BT_NIMBLE_ENABLED is not set'
                          '# CONFIG_BT_CONTROLLER_ENABLED is not set'
                          CONFIG_BT_CONTROLLER_DISABLED=y
                          '# CONFIG_LWIP_IP_FORWARD is not set'
                          '# CONFIG_LWIP_IPV4_NAPT is not set'
                          '# CONFIG_LWIP_IPV4_NAPT_PORTMAP is not set'
                          '# CONFIG_LWIP_PPP_SUPPORT is not set'
custom_component_remove = espressif/esp_hosted
                          espressif/esp_wifi_remote
                          espressif/esp_modem

[env:Infinitek32s3ser-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32s3ser-qio_qspi
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                         -DFIRMWARE_SAFEBOOT
                         -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32s3ser-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}

[env:Infinitek32p4-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32p4
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32p4-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}

[env:Infinitek32p4ser-safeboot]
extends                 = env:Infinitek32_base
board                   = esp32p4ser
board_build.app_partition_name = safeboot
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_SAFEBOOT
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/ser-safeboot.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32
lib_ignore              = ${safeboot_flags.lib_ignore}

[env:Infinitek32]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_Infinitek32
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32.bin"'

[env:Infinitek32solo1]
extends                 = env:Infinitek32_base
board                   = esp32-solo1
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_Infinitek32
                          -DCODE_IMAGE_STR='"solo1"'
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32solo1.bin"'
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP
                          epdiy
custom_sdkconfig        =
                          '# CONFIG_SPIRAM is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_BUS_OFF_REC is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_TX_INTR_LOST is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_RX_FRAME_INVALID is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_RX_FIFO_CORRUPT is not set'
                          '# CONFIG_TWAI_ERRATA_FIX_LISTEN_ONLY_DOM is not set'

[env:Infinitek32s2]
extends                 = env:Infinitek32_base
board                   = esp32s2
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_Infinitek32
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32s2.bin"'
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP
                          epdiy

[env:Infinitek32s2cdc]
extends                 = env:Infinitek32_base
board                   = esp32s2cdc
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_Infinitek32
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32s2cdc.bin"'
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP
                          epdiy

[env:Infinitek32c2]
extends                 = env:Infinitek32_base
board                   = esp32c2
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_Infinitek32
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c2.bin"'
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP

[env:Infinitek32c3]
extends                 = env:Infinitek32_base
board                   = esp32c3
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_Infinitek32
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c3.bin"'
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP
[env:Infinitek32c5]
platform                = https://github.com/Jason2866/platform-espressif32.git#Arduino/IDF55
extends                 = env:Infinitek32_base
board                   = esp32c5
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_Infinitek32
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c5.bin"'
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP
[env:Infinitek32c6]
extends                 = env:Infinitek32_base
board                   = esp32c6
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_Infinitek32
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32c6.bin"'
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP

[env:Infinitek32p4]
extends                 = env:Infinitek32_base
board                   = esp32p4
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_Infinitek32
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32p4.bin"'
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP

[env:Infinitek32s3]
extends                 = env:Infinitek32_base
board                   = esp32s3-qio_qspi
build_flags             = ${env:Infinitek32_base.build_flags}
                         -DFIRMWARE_Infinitek32
                         -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32s3.bin"'
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP
                          epdiy

[env:Infinitek32-webcam]
extends                 = env:Infinitek32_base
board                   = esp32-fix
board_build.f_cpu       = 240000000L
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_WEBCAM
                          -DCAMERA_MODEL_AI_THINKER
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-webcam.bin"'
lib_extra_dirs          = lib/lib_ssl, lib/libesp32

[env:Infinitek32-bluetooth]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_BLUETOOTH
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-bluetooth.bin"'
lib_extra_dirs          = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_ssl
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP

[env:Infinitek32-display]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_DISPLAYS
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-display.bin"'
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_display, lib/lib_ssl
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP

[env:Infinitek32-lvgl]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_LVGL
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-lvgl.bin"'
board_build.f_cpu       = 240000000L
lib_extra_dirs          = lib/libesp32, lib/libesp32_lvgl, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP

[env:Infinitek32-ir]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_IR
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-ir.bin"'
lib_extra_dirs          = lib/libesp32, lib/lib_basic, lib/lib_ssl
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP

[env:Infinitek32-zbbrdgpro]
extends                 = env:Infinitek32_base
board_build.partitions  = partitions/esp32_partition_app1856k_fs1344k.csv
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-zbbrdgpro.bin"'
                          -DFIRMWARE_ZBBRDGPRO
custom_files_upload     = ${env:Infinitek32_base.custom_files_upload}
                          tools/fw_SonoffZigbeeBridgePro_cc2652/Sonoff_ZBPro.autoconf
                          Infinitek/berry/zigbee/cc2652_flasher.be
                          Infinitek/berry/zigbee/intelhex.be
                          Infinitek/berry/zigbee/sonoff_zb_pro_flasher.be
                          tools/fw_SonoffZigbeeBridgePro_cc2652/SonoffZBPro_coord_20220219.hex
custom_sdkconfig        = CONFIG_D0WD_PSRAM_CLK_IO=5
                          CONFIG_D0WD_PSRAM_CS_IO=18
lib_extra_dirs          = lib/lib_basic, lib/lib_ssl, lib/libesp32
lib_ignore              = ${env:Infinitek32_base.lib_ignore}
                          Micro-RTSP
                          IRremoteESP8266
                          InfinitekModbus
                          ESP Mail Client

[env:Infinitek32-nspanel]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags}
                          -DFIRMWARE_NSPANEL
                          -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-nspanel.bin"'
custom_sdkconfig        = CONFIG_D0WD_PSRAM_CLK_IO=5
                          CONFIG_D0WD_PSRAM_CS_IO=18

[env:Infinitek32-AD]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=ca_AD -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-AD.bin"'

[env:Infinitek32-AF]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=af_AF -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-AF.bin"'

[env:Infinitek32-BG]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=bg_BG -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-BG.bin"'

[env:Infinitek32-BR]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=pt_BR -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-BR.bin"'

[env:Infinitek32-CN]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=zh_CN -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-CN.bin"'

[env:Infinitek32-CZ]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=cs_CZ -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-CZ.bin"'

[env:Infinitek32-DE]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=de_DE -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-DE.bin"'

[env:Infinitek32-ES]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=es_ES -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-ES.bin"'

[env:Infinitek32-FR]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=fr_FR -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-FR.bin"'

[env:Infinitek32-FY]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=fy_NL -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-FY.bin"'

[env:Infinitek32-GR]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=el_GR -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-GR.bin"'

[env:Infinitek32-HE]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=he_HE -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-HE.bin"'

[env:Infinitek32-HU]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=hu_HU -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-HU.bin"'

[env:Infinitek32-IT]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=it_IT -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-IT.bin"'

[env:Infinitek32-KO]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=ko_KO -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-KO.bin"'

[env:Infinitek32-LT]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=lt_LT -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-LT.bin"'

[env:Infinitek32-NL]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=nl_NL -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-NL.bin"'

[env:Infinitek32-PL]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=pl_PL -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-PL.bin"'

[env:Infinitek32-PT]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=pt_PT -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-PT.bin"'

[env:Infinitek32-RO]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=ro_RO -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-RO.bin"'

[env:Infinitek32-RU]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=ru_RU -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-RU.bin"'

[env:Infinitek32-SE]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=sv_SE -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-SE.bin"'

[env:Infinitek32-SK]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=sk_SK -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-SK.bin"'

[env:Infinitek32-TR]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=tr_TR -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-TR.bin"'

[env:Infinitek32-TW]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=zh_TW -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-TW.bin"'

[env:Infinitek32-UK]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=uk_UA -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-UK.bin"'

[env:Infinitek32-VN]
extends                 = env:Infinitek32_base
build_flags             = ${env:Infinitek32_base.build_flags} -DMY_LANGUAGE=vi_VN -DFIRMWARE_Infinitek32 -DOTA_URL='"http://ota.Infinitek.com/Infinitek32/release/Infinitek32-VN.bin"'

