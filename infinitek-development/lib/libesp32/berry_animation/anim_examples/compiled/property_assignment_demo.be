# Generated Berry code from Animation DSL
# Source: property_assignment_demo.anim
# 
# This file was automatically generated by compile_all_examples.sh
# Do not edit manually - changes will be overwritten

import animation

# Property Assignment Demo
# Shows how to set animation properties after creation
#strip length 60
# Define colors
# Auto-generated strip initialization (using Infinitek configuration)
var engine = animation.init_strip()

var red_custom_ = 0xFFFF0000
var blue_custom_ = 0xFF0000FF
var green_custom_ = 0xFF00FF00
# Create animations
var left_pulse_ = animation.beacon_animation(engine)
left_pulse_.color = red_custom_
left_pulse_.pos = 15
left_pulse_.beacon_size = 15
left_pulse_.slew_size = 3
var center_pulse_ = animation.beacon_animation(engine)
center_pulse_.color = blue_custom_
center_pulse_.pos = 30
center_pulse_.beacon_size = 15
center_pulse_.slew_size = 3
var right_pulse_ = animation.beacon_animation(engine)
right_pulse_.color = green_custom_
right_pulse_.pos = 45
right_pulse_.beacon_size = 15
right_pulse_.slew_size = 3
# Set different opacities
left_pulse_.opacity = 255  # Full slew_size
center_pulse_.opacity = 200  # Slightly dimmed
right_pulse_.opacity = 150  # More dimmed
# Set priorities (higher numbers have priority)
left_pulse_.priority = 10
center_pulse_.priority = 15  # Center has highest priority
right_pulse_.priority = 5
# Create a sequence that shows all three
var demo_ = animation.SequenceManager(engine)
  .push_play_step(left_pulse_, 3000)
  .push_wait_step(500)
  .push_play_step(center_pulse_, 3000)
  .push_wait_step(500)
  .push_play_step(right_pulse_, 3000)
  .push_wait_step(500)
  # Play all together for final effect
  .push_repeat_subsequence(animation.SequenceManager(engine, -1)
    .push_play_step(left_pulse_, 2000)
    .push_play_step(center_pulse_, 2000)
    .push_play_step(right_pulse_, 2000)
    .push_wait_step(1000)
    )
engine.add(demo_)
engine.run()


#- Original DSL source:
# Property Assignment Demo
# Shows how to set animation properties after creation

#strip length 60

# Define colors
color red_custom = 0xFF0000
color blue_custom = 0x0000FF
color green_custom = 0x00FF00

# Create animations
animation left_pulse = beacon_animation(color=red_custom, pos=15, beacon_size=15, slew_size=3)
animation center_pulse = beacon_animation(color=blue_custom, pos=30, beacon_size=15, slew_size=3)
animation right_pulse = beacon_animation(color=green_custom, pos=45, beacon_size=15, slew_size=3)

# Set different opacities
left_pulse.opacity = 255    # Full slew_size
center_pulse.opacity = 200  # Slightly dimmed
right_pulse.opacity = 150   # More dimmed

# Set priorities (higher numbers have priority)
left_pulse.priority = 10
center_pulse.priority = 15   # Center has highest priority
right_pulse.priority = 5

# Create a sequence that shows all three
sequence demo {
  play left_pulse for 3s
  wait 500ms
  play center_pulse for 3s
  wait 500ms
  play right_pulse for 3s
  wait 500ms
  
  # Play all together for final effect
  repeat forever {
    play left_pulse for 2s
    play center_pulse for 2s
    play right_pulse for 2s
    wait 1s
  }
}

run demo
-#
