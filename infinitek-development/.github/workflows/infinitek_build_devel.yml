
name: Build_development

on:
  workflow_dispatch:      # Start a workflow
  push:
    branches: development
    paths-ignore:
    - '.github/**'        # Ignore changes towards the .github directory
    - '**.md'             # Do no build if *.md files changes
    - 'Infinitek/berry/**'  # Ignore Berry examples

# Ensures that only one deploy task per branch/environment will run at a time.
concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  be_solidify:
    runs-on: ubuntu-latest
    if: github.repository == 'arendst/Infinitek' && github.ref_name == 'development'
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Make Berry and Solidify code
        run: |
          cd lib/libesp32/berry
          make
          cd ../berry_Infinitek
          ../berry/berry -s -g solidify_all.be
          cd ../berry_matter
          ../berry/berry -s -g solidify_all.be
          cd ../berry_animate
          ../berry/berry -s -g solidify_all.be
          cd ../../libesp32_lvgl/lv_binding_berry
          ../../libesp32/berry/berry -s -g solidify_all.be
          cd ../lv_haspmota
          ../../libesp32/berry/berry -s -g solidify_all.be
      - uses: actions/upload-artifact@v4
        with:
          name: berry
          path: |
            ./lib/libesp32/berry_Infinitek/src/solidify
            ./lib/libesp32/berry_matter/src/solidify
            ./lib/libesp32/berry_animate/src/solidify
            ./lib/libesp32_lvgl/lv_binding_berry/src/solidify
            ./lib/libesp32_lvgl/lv_haspmota/src/solidify
            ./lib/libesp32/berry/generate

  push_solidified:
    needs: be_solidify
    runs-on: ubuntu-latest
    if: github.repository == 'arendst/Infinitek' && github.ref_name == 'development'
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - uses: actions/download-artifact@v4
        with:
          pattern: berry
          path: berry
      - name: Move solidified Berry files back
        run: |
          ls -R ./berry
          mv berry/berry/libesp32/berry_Infinitek/src/solidify/* ./lib/libesp32/berry_Infinitek/src/solidify
          mv berry/berry/libesp32/berry_matter/src/solidify/* ./lib/libesp32/berry_matter/src/solidify
          mv berry/berry/libesp32/berry_animate/src/solidify/* ./lib/libesp32/berry_animate/src/solidify
          mv berry/berry/libesp32_lvgl/lv_binding_berry/src/solidify/* ./lib/libesp32_lvgl/lv_binding_berry/src/solidify
          mv berry/berry/libesp32_lvgl/lv_haspmota/src/solidify/* ./lib/libesp32_lvgl/lv_haspmota/src/solidify
          mv berry/berry/libesp32/berry/generate/* ./lib/libesp32/berry/generate
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Solidified Code updated

  safeboot-images:
    needs: push_solidified
    runs-on: ubuntu-latest
    if: github.repository == 'arendst/Infinitek'
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - Infinitek32-safeboot
          - Infinitek32solo1-safeboot
          - Infinitek32s2-safeboot
          - Infinitek32s2cdc-safeboot
          - Infinitek32s3-safeboot
          - Infinitek32s3ser-safeboot
          - Infinitek32c2-safeboot
          - Infinitek32c3-safeboot
          - Infinitek32c3ser-safeboot
          - Infinitek32c5-safeboot
          - Infinitek32c5ser-safeboot
          - Infinitek32c6-safeboot
          - Infinitek32c6ser-safeboot
          - Infinitek32p4-safeboot
          - Infinitek32p4ser-safeboot
    steps:
      - uses: actions/checkout@v4
        with:
          ref: development
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: false
      - name: Install dependencies
        run: |
          uv pip install --system platformio
          cp ./platformio_override_sample.ini ./platformio_override.ini
      - name: Add SHA to footer
        run: |
          COMMIT_SHA_LONG=$(git rev-parse --short HEAD || echo "")
          SHA=${COMMIT_SHA_LONG::7}
          sed -i -e "s/Infinitek_SHA_SHORT/Infinitek_SHA_SHORT $SHA-/g" ./Infinitek/include/Infinitek_version.h
      - name: Run PlatformIO
        env:
          PYTHONIOENCODING: utf-8
          PYTHONUTF8: '1'
        run: platformio run -e ${{ matrix.variant }}
      #- name: Use esp32-solo1 safeboot for esp32 too
        #run: |
          #cp ./build_output/firmware/Infinitek32solo1-safeboot.bin ./build_output/firmware/Infinitek32-safeboot.bin 
      - name: Upload safeboot firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}
          path: ./build_output

  base-images:
    needs: push_solidified
    runs-on: ubuntu-latest
    if: github.repository == 'arendst/Infinitek'
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - Infinitek
          - Infinitek-4M
          - Infinitek-minimal
          - Infinitek-display
          - Infinitek-ir
          - Infinitek-knx
          - Infinitek-lite
          - Infinitek-sensors
          - Infinitek-zbbridge
          - Infinitek-zigbee
    steps:
      - uses: actions/checkout@v4
        with:
          ref: development
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: false
      - name: Install dependencies
        run: |
          uv pip install --system platformio
      - name: Add SHA to footer
        run: |
          COMMIT_SHA_LONG=$(git rev-parse --short HEAD || echo "")
          SHA=${COMMIT_SHA_LONG::7}
          sed -i -e "s/Infinitek_SHA_SHORT/Infinitek_SHA_SHORT $SHA-/g" ./Infinitek/include/Infinitek_version.h
      - name: Run PlatformIO
        env:
          PYTHONIOENCODING: utf-8
          PYTHONUTF8: '1'
        run: platformio run -e ${{ matrix.variant }}
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}
          path: ./build_output

  base32-images:
    needs: safeboot-images
    runs-on: ubuntu-latest
    if: github.repository == 'arendst/Infinitek'
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - Infinitek32
          - Infinitek32-zbbrdgpro
          - Infinitek32-webcam
          - Infinitek32-bluetooth
          - Infinitek32-nspanel
          - Infinitek32-display
          - Infinitek32-ir
          - Infinitek32-lvgl
          - Infinitek32c2
          - Infinitek32c3
          - Infinitek32c5
          - Infinitek32c6
          - Infinitek32p4
          - Infinitek32s2
          - Infinitek32s2cdc
          - Infinitek32s3
          - Infinitek32solo1
    steps:
      - uses: actions/checkout@v4
        with:
          ref: development
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: false
      - name: Install dependencies
        run: |
          uv pip install --system platformio
          cp ./platformio_override_sample.ini ./platformio_override.ini
      - name: Download safeboot firmwares
        uses: actions/download-artifact@v4
        with:
          pattern: Infinitek32*
          path: ./temp
      - name: Move safeboot files
        run: |
          mkdir -p ./firmware/firmware
          find ./temp -type f -exec cp -t ./firmware/firmware {} +
      - name: Add SHA to footer
        run: |
          COMMIT_SHA_LONG=$(git rev-parse --short HEAD || echo "")
          SHA=${COMMIT_SHA_LONG::7}
          sed -i -e "s/Infinitek_SHA_SHORT/Infinitek_SHA_SHORT $SHA-/g" ./Infinitek/include/Infinitek_version.h
      - name: Run PlatformIO
        env:
          PYTHONIOENCODING: utf-8
          PYTHONUTF8: '1'
        run: platformio run -e ${{ matrix.variant }}
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}
          path: ./build_output

  language-images:
    needs: safeboot-images
    runs-on: ubuntu-latest
    if: github.repository == 'arendst/Infinitek'
    continue-on-error: true
    strategy:
      matrix:
        variant: [ Infinitek, Infinitek32 ]
        language: [ AD, AF, BG, BR, CN, CZ, DE, ES, FR, FY, GR, HE, HU, IT, KO, LT, NL, PL, PT, RO, RU, SE, SK, TR, TW, UK, VN ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: development
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: false
      - name: Install dependencies
        run: |
          uv pip install --system platformio
          cp ./platformio_override_sample.ini ./platformio_override.ini
      - name: Download safeboot firmwares
        uses: actions/download-artifact@v4
        with:
          pattern: Infinitek32*
          path: ./temp
      - name: Move safeboot files
        run: |
          mkdir -p ./firmware/firmware
          find ./temp -type f -exec cp -t ./firmware/firmware {} +
      - name: Add SHA to footer
        run: |
          COMMIT_SHA_LONG=$(git rev-parse --short HEAD || echo "")
          SHA=${COMMIT_SHA_LONG::7}
          sed -i -e "s/Infinitek_SHA_SHORT/Infinitek_SHA_SHORT $SHA-/g" ./Infinitek/include/Infinitek_version.h
      - name: Run PlatformIO
        env:
          PYTHONIOENCODING: utf-8
          PYTHONUTF8: '1'
        run: platformio run -e ${{ matrix.variant }}-${{ matrix.language }}
      - name: Upload language firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.variant }}-${{ matrix.language }}
          path: ./build_output

  Start_final_copy:
    needs: [base-images, base32-images, language-images]
    runs-on: ubuntu-latest
    steps:
    - name: Dispatch workflow in arendst/Infinitek-firmware
      run: |
         curl -X POST https://api.github.com/repos/arendst/Infinitek-firmware/actions/workflows/fetch_deploy.yml/dispatches \
         -H 'Accept: application/vnd.github.everest-preview+json' \
         -u ${{ secrets.API_TOKEN_GITHUB }} \
         --data '{"ref": "gh_actions"}'
